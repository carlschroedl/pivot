{
    "openapi": "3.0.0",
    "info": {
        "title": "Pivot API",
        "version": "1.0.0"
    },
    "paths": {
        "/open/try": {
            "post": {
                "tags": [
                    "BFF Election Result"
                ],
                "summary": "Run an election using BFF ballots",
                "description": "Run a Ranked Pairs election via BFF ballots.",
                "operationId": "calculateResult",
                "parameters": [
                    {
                        "$ref": "string"
                    },
                    {
                        "$ref": "string"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {}
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "string"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections/{electionId}/candidates": {
            "get": {
                "tags": [
                    "Candidates"
                ],
                "summary": "View candidates for an election",
                "description": "Display a listing of the resource.",
                "operationId": "candidateIndex",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Add a candidate",
                "description": "Add a new candidate for an election",
                "operationId": "createCandidate",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payload",
                        "in": "query",
                        "description": "Candidate to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CreateCandidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections/{electionId}/candidates/{candidateId}": {
            "get": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Get information about a candidate",
                "description": "Show a candidate from an election",
                "operationId": "getCandidateById",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "candidateId",
                        "in": "path",
                        "description": "Candidate to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Delete a candidate",
                "description": "Delete a candidate from an election",
                "operationId": "deleteCandidate",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "candidateId",
                        "in": "path",
                        "description": "Candidate ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Update a candidate",
                "description": "Delete a candidate from an election",
                "operationId": "updateCandidate",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payload",
                        "in": "query",
                        "description": "Candidate to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CreateCandidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections": {
            "get": {
                "tags": [
                    "Election"
                ],
                "summary": "View all elections",
                "operationId": "electionIndex",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections/{electionId}": {
            "get": {
                "tags": [
                    "Election"
                ],
                "summary": "View information about an election",
                "description": "Display the specified resource.",
                "operationId": "getElectionById",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections/{electionId}/electors": {
            "get": {
                "tags": [
                    "Electors"
                ],
                "summary": "View the electorate for an election",
                "description": "Display a listing of the resource.",
                "operationId": "electorIndex",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections/{electionId}/electors/{electorId}": {
            "get": {
                "tags": [
                    "Electors"
                ],
                "summary": "Get information about an elector",
                "description": "Display the specified resource.",
                "operationId": "getElectorById",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "electorId",
                        "in": "path",
                        "description": "Elector to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/elections/{electionId}/invite": {
            "get": {
                "tags": [
                    "Invites"
                ],
                "summary": "View electors who have not accepted their invite yet",
                "description": "Display a listing of the resource.",
                "operationId": "inviteIndex",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Invites"
                ],
                "summary": "Send an invite",
                "description": "Store a newly created resource in storage.",
                "operationId": "createInvite",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payload",
                        "in": "query",
                        "description": "Email to invite",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/invite/accept": {
            "post": {
                "tags": [
                    "Invites"
                ],
                "summary": "Accept an invite",
                "description": "Update the specified resource in storage.",
                "operationId": "acceptInvite",
                "parameters": [
                    {
                        "name": "payload",
                        "in": "query",
                        "description": "Code to accept an invite",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/election/{electionId}/result": {
            "get": {
                "tags": [
                    "Election"
                ],
                "summary": "View results for an election",
                "description": "Get Election Results.",
                "operationId": "getElectionResults",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get results of",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Candidate": {
                "title": "Candidate",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "123"
                    },
                    "election_id": {
                        "type": "string",
                        "example": "123"
                    },
                    "name": {
                        "type": "string",
                        "example": "Funds for road construction"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    }
                },
                "type": "object"
            },
            "Code": {
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "CreateCandidate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Highland Avenue"
                    }
                },
                "type": "object"
            },
            "Election": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "123"
                    },
                    "creator_id": {
                        "type": "string",
                        "example": "123"
                    },
                    "name": {
                        "type": "string",
                        "example": "Funds for road construction"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    }
                },
                "type": "object"
            },
            "ElectionWithCreator": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "123"
                    },
                    "creator_id": {
                        "type": "string",
                        "example": "123"
                    },
                    "name": {
                        "type": "string",
                        "example": "Funds for road construction"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Email": {
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    }
                },
                "type": "object"
            },
            "Invite": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "123"
                    },
                    "code": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "accepted_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    }
                },
                "type": "object"
            },
            "InviteWithElection": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "123"
                    },
                    "code": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "accepted_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "pivot": {
                        "$ref": "#/components/schemas/PivotElection"
                    }
                },
                "type": "object"
            },
            "PivotElection": {
                "properties": {
                    "election_id": {
                        "type": "string",
                        "example": "123"
                    },
                    "invite_id": {
                        "type": "string",
                        "example": "123"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "123"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2017-01-01 11:00:00"
                    }
                },
                "type": "object"
            }
        }
    }
}